# Generated by Django 5.2.6 on 2025-09-09 19:09

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название категории', max_length=100, verbose_name='Название категории')),
                ('slug', models.SlugField(help_text='Уникальный идентификатор для URL', max_length=100, unique=True, verbose_name='URL-идентификатор')),
                ('description', models.TextField(blank=True, help_text='Описание категории (необязательно)', null=True, verbose_name='Описание категории')),
                ('image', models.ImageField(blank=True, help_text='Загрузите изображение категории (необязательно)', null=True, upload_to='categories/', verbose_name='Изображение категории')),
                ('is_active', models.BooleanField(default=True, help_text='Отметьте, если категория активна', verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('parent', models.ForeignKey(blank=True, help_text='Выберите родительскую категорию (если есть)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название товара', max_length=200, verbose_name='Название товара')),
                ('slug', models.SlugField(help_text='Уникальный идентификатор для URL', max_length=200, unique=True, verbose_name='URL-идентификатор')),
                ('description', models.TextField(blank=True, help_text='Подробное описание товара (необязательно)', null=True, verbose_name='Описание товара')),
                ('image', models.ImageField(blank=True, help_text='Загрузите основное изображение товара (необязательно)', null=True, upload_to='products/', verbose_name='Основное изображение')),
                ('price', models.DecimalField(decimal_places=2, help_text='Введите цену товара', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Цена')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, help_text='Введите старую цену для акционных товаров (необязательно)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Старая цена')),
                ('in_stock', models.BooleanField(default=True, help_text='Отметьте, если товар есть в наличии', verbose_name='В наличии')),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Укажите количество товара на складе', verbose_name='Количество на складе')),
                ('size', models.CharField(choices=[('XS', 'Extra Small'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', 'Double Extra Large'), ('XXXL', 'Triple Extra Large'), ('UNI', 'Универсальный')], default='UNI', help_text='Выберите размер товара', max_length=10, verbose_name='Размер')),
                ('is_active', models.BooleanField(default=True, help_text='Отметьте, если товар активен', verbose_name='Активен')),
                ('is_featured', models.BooleanField(default=False, help_text='Отметьте, чтобы показать в рекомендуемых товарах', verbose_name='Рекомендуемый')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('category', models.ForeignKey(help_text='Выберите категорию товара', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/', verbose_name='Изображение')),
                ('alt_text', models.CharField(blank=True, help_text='Описание изображения для SEO', max_length=100, verbose_name='Альтернативный текст')),
                ('is_main', models.BooleanField(default=False, verbose_name='Основное изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': 'Изображения товаров',
                'ordering': ['-is_main', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, verbose_name='Имя автора')),
                ('email', models.EmailField(max_length=254, verbose_name='Email автора')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Ужасно'), (2, '2 - Плохо'), (3, '3 - Нормально'), (4, '4 - Хорошо'), (5, '5 - Отлично')], verbose_name='Рейтинг')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='shop_catego_slug_5ac49f_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active'], name='shop_catego_is_acti_59c89f_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='shop_produc_slug_76971b_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='shop_produc_is_acti_2257ae_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['in_stock'], name='shop_produc_in_stoc_0a4395_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='shop_produc_categor_d249e3_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='shop_produc_price_3b79b5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='shop_produc_created_ed077b_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['product', 'is_approved'], name='shop_produc_product_b8f52b_idx'),
        ),
    ]
